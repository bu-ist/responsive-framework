/* START: something
----------------------------------------------------------------- */

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

@mixin breakpoint($point) {
    /* If primary stylesheet indicates media query support (e.g. style.scss), output media queries.
     *     If not (e.g. ie.scss), output the block WITHOUT @media wrapper. */
    
    @if ($MQs and $point == extra_small) {
        @media (min-width: $XS) { @content; }
    } @else {
        @content;
    }

    @if ($MQs and $point == small) {
        @media (min-width: $S) { @content; }
    } @else {
        @content;
    }

    @if ($MQs and $point == medium) {
        @media (min-width: $M) { @content; }
    } @else {
        @content;
    }

    @if ($MQs and $point == large) {
        @media (min-width: $L) { @content; }
    } @else {
        /* don't output anything for IE at large sizes */
    }
    
}



/* Same as @mixin mq($point), except allows a longer string of media query conditions
 *     e.g. min-width and max-width, or multiple DPI checkers */
@mixin breakpoint-multiple($points) {
    /* If primary stylesheet indicates media query support (e.g. style.scss), output media queries.
     *     If not (e.g. ie.scss), output the block WITHOUT @media wrapper. */
    @if ($MQs) {
         @media #{$points} {
             @content;
         }
    } @else {
        @content;
    }
}