/* START: variables
----------------------------------------------------------------- */

/* typography */

$font-branding: 'Whitney SSm A', 'Whitney SSm B';

/* breakpoint sizes */

$XS: 500px;
$S: 768px;
$M: 992px;
$L: 1200px;

/* .container,
#bottom-content-area div
widths  */

$container_S: 750px;
$container_M: 970px;
$container_L: 1170px;

/* END: variables
----------------------------------------------------------------- */





/* START: mixins
----------------------------------------------------------------- */

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
     -moz-border-radius: $radius;
      -ms-border-radius: $radius;
          border-radius: $radius;
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

/* If primary stylesheet indicates media query support (e.g. style.scss), output media queries.
*     If not (e.g. ie.scss), output the block WITHOUT @media wrapper. */  
@mixin breakpoint($point) {

    @if ($MQs) {
        @if ($point == extra_small) {
            @media (min-width: $XS) { @content; }
        }


        @if ($point == small) {
            @media (min-width: $S) { @content; }
        } 

        @if ($point == medium) {
            @media (min-width: $M) { @content; }
        } 
        
        @if ($point == large) {
            @media (min-width: $L) { @content; }
        }
    } @else {
        @if ($point == large) { 
        //ie8 and large desktop output nothing
        } @else {
            @content;
        }
    }
}

/* Same as @mixin mq($point), except allows a longer string of media query conditions
*     e.g. min-width and max-width, or multiple DPI checkers */
@mixin breakpoint-multiple($points) {
    @if ($MQs) {
         @media only screen and #{$points} {
             @content;
         }
    } @else {
        @content;
    }
}


/* Mixin to generate RGBA colors for any style with a fallback for non-rgba browsers such as IE8
   Usage: @include rgba-color('background-color', rgba(black, 0.5), white); */
@mixin rgba-color($attribute, $color, $background) {
  $percent: alpha($color) * 100%;
  $opaque: opacify($color, 1);
  $solid-color: mix($opaque, $background, $percent);
  #{$attribute}: $solid-color;
  #{$attribute}: $color;
}

/* END: mixins
----------------------------------------------------------------- */

